/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.Socket;
import java.net.UnknownHostException;

/**
 *
 * @author jesus
 */
public class ClienteGUI extends javax.swing.JFrame {

    /**
     * Creates new form ClienteGUI
     */
    public ClienteGUI() {
        initComponents();
        System.out.println("Establishing connection. Please wait ...");
      try
      {  socket = new Socket("127.0.0.1", 12345);
         System.out.println("Connected: " + socket);
         arrancar();
         iniciarEscuchaMulticast();
          
      }catch(UnknownHostException uhe)
      {  
          System.out.println("Host unknown: " + uhe.getMessage());
      }
      catch(IOException ioe)
      {  
          System.out.println("Unexpected exception: " + ioe.getMessage());
      }
      
      String line = "";
     while (!(line.equals("terminar")))
      { 
       try
          { 
            //toma los valores de la consola
            line=console.readLine();
            //manda el mensaje al servidor
            streamOut.writeUTF(line);
            streamOut.flush();
                                  
            //imprime lo que manda el server
            line = entrada.readUTF();
            System.out.print("lo que envia el server desde cliente "+line);
                      
         }
         catch(IOException ioe)
         {  System.out.println("Sending error: " + ioe.getMessage());
         }
      } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        
        lbTitulo = new javax.swing.JLabel();
        lbPreguntaSeleccionada = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taPregunta = new javax.swing.JTextArea();
        rbOpcion1 = new javax.swing.JRadioButton();
        rbOpcion2 = new javax.swing.JRadioButton();
        rbOpcion3 = new javax.swing.JRadioButton();
        rbOpcion4 = new javax.swing.JRadioButton();
        comboPreguntas = new javax.swing.JComboBox<>();
        lbPreguntas = new javax.swing.JLabel();
        btObtener = new javax.swing.JButton();
        lbTiempoTranscurrido = new javax.swing.JLabel();
        tfTiempoTranscurrido = new javax.swing.JTextField();
        lbMinutos = new javax.swing.JLabel();
        btEnviar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbTitulo.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lbTitulo.setForeground(new java.awt.Color(0, 0, 255));
        lbTitulo.setText("Examen colaborativo Univalle");

        lbPreguntaSeleccionada.setText("Pregunta :");

        taPregunta.setEditable(false);
        taPregunta.setColumns(20);
        taPregunta.setRows(5);
        jScrollPane1.setViewportView(taPregunta);

        rbOpcion1.setText("jRadioButton1");

        rbOpcion2.setText("jRadioButton2");

        rbOpcion3.setText("jRadioButton3");

        rbOpcion4.setText("jRadioButton4");

        lbPreguntas.setText("Preguntas");

        btObtener.setText("Obtener");
        btObtener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btObtenerActionPerformed(evt);
            }
        });

        lbTiempoTranscurrido.setText("Tiempo transcurrido");

        tfTiempoTranscurrido.setEditable(false);

        lbMinutos.setText("Minutos");

        btEnviar.setText("Enviar");
        btEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnviarActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btEnviar)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rbOpcion3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbTiempoTranscurrido)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfTiempoTranscurrido, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbMinutos))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboPreguntas, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btObtener))
                                    .addComponent(lbPreguntas)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btCancelar))))
                    .addComponent(rbOpcion4)
                    .addComponent(rbOpcion2)
                    .addComponent(rbOpcion1)
                    .addComponent(lbTitulo)
                    .addComponent(lbPreguntaSeleccionada, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbPreguntaSeleccionada)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lbPreguntas)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboPreguntas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btObtener))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbOpcion1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbOpcion2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rbOpcion3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbTiempoTranscurrido)
                        .addComponent(tfTiempoTranscurrido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbMinutos)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbOpcion4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEnviar)
                    .addComponent(btCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void iniciarEscuchaMulticast() throws IOException{
    //Creamos un socket multicast en el puerto 10000:
     smcR = new MulticastSocket (10000);
    //Configuramos el grupo (IP) a la que nos conectaremos
     group = InetAddress.getByName ("230.0.0.0");
    //Nos unimos al grupo:
    smcR.joinGroup (group);
    
    //lanzo el subproceso que va a estar escuchando al multicast
    escuchandoM = new Thread(){
        @Override
        public void run(){
            escuchandoMultiast();
        }
    };
    escuchandoM.start();
             
    }
    
    public void escuchandoMultiast(){
        initComponents();
       while(true){
            // Los paquetes enviados son de 256 bytes de maximo
            byte [] buffer = new byte [256];

            //Creamos el datagrama en el que recibiremos el paquete del socket multicast
            DatagramPacket dgp = new DatagramPacket (buffer, buffer.length);
            try{
                // Recibimos el paquete del socket:
                 smcR.receive (dgp);
                 // Adaptamos la información al tamaño de lo que se envió por si se envió menos de 256):
                 byte [] buffer2 = new byte [dgp.getLength ()];
                 // Copiamos los datos en el nuevo array de tamaño adecuado:
                 System.arraycopy (dgp.getData (),0,buffer2,0, dgp.getLength ());

                 //Vemos los datos recibidos por pantalla:
                 String salida = new String (buffer2);
                 System.out.println (salida);
                 System.out.print("Escuchando del server");
            }catch(IOException e){
                System.out.println("Error en el multicast al recibir en el cliente");
                e.printStackTrace();
            }
       }
   }
   /**
    * se abren los streams para comunicarse con el servior, y se toman los valores que se van a mandar
    * al servidor desde consola
    * @throws IOException 
    */
   public void arrancar() throws IOException
   {   
       entrada   = new DataInputStream(socket.getInputStream());
       streamOut = new DataOutputStream(socket.getOutputStream());
       console = new DataInputStream(System.in);
   }
   public void stop()
   {  try
      {  if (entrada   != null)  console.close();
         if (streamOut != null)  streamOut.close();
         if (socket    != null)  socket.close();
      }
      catch(IOException ioe)
      {  System.out.println("Error closing ...");
      }
   }

    private void btEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnviarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btEnviarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btObtenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btObtenerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btObtenerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btEnviar;
    private javax.swing.JButton btObtener;
    private javax.swing.JComboBox<String> comboPreguntas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbMinutos;
    private javax.swing.JLabel lbPreguntaSeleccionada;
    private javax.swing.JLabel lbPreguntas;
    private javax.swing.JLabel lbTiempoTranscurrido;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JRadioButton rbOpcion1;
    private javax.swing.JRadioButton rbOpcion2;
    private javax.swing.JRadioButton rbOpcion3;
    private javax.swing.JRadioButton rbOpcion4;
    private javax.swing.JTextArea taPregunta;
    private javax.swing.JTextField tfTiempoTranscurrido;
    
    private Socket socket              = null;
   private DataInputStream  console, entrada  = null;
   private DataOutputStream streamOut = null;
   
   //para que el cliente reciba lo del multicast
    MulticastSocket smcR = null;
    InetAddress group = null;
    Thread escuchandoM;
    // End of variables declaration//GEN-END:variables
}
